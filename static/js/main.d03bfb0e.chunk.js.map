{"version":3,"sources":["models/source.enum.ts","components/NavBar/NavBar.tsx","components/Quote/Quote.tsx","components/QuoteList/QuoteList.tsx","index.tsx"],"names":["Source","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onScroll","prevVal","state","smallNav","newVal","window","scrollY","setState","addEventListener","removeEventListener","react_default","a","createElement","className","role","aria-label","style","boxShadow","concat","href","type","React","Component","Quote","quote","source","BOOK","TV","MOVIE","marginBottom","image","src","alt","content","Link","to","author","appearsIn","getSourceClass","QuoteList","axiosGQL","pageSize","quoteQuery","innerHeight","document","documentElement","scrollTop","offsetHeight","loadQuotes","loading","noMore","quotes","params","match","console","log","axios","create","baseURL","_this2","body","query","variables","first","offset","length","post","then","result","gqlResult","data","paginatedQuotes","toConsumableArray","total","Fragment","map","components_Quote_Quote","key","margin","display","ReactDOM","render","components_NavBar_NavBar","marginTop","BrowserRouter","Route","path","exact","component","querySelector"],"mappings":"kLAAYA,uFCgEGC,qBAvDX,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACpBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAeVQ,SAAW,WACP,IAAMC,EAAUR,EAAKS,MAAMC,SACvBC,EAASC,OAAOC,SAAW,IAE1BL,IAAYG,GACbX,EAAKc,SAAS,CACVJ,SAAUC,KAnBlBX,EAAKS,MAAQ,CACTC,UAAU,GAJMV,mFASpBY,OAAOG,iBAAiB,SAAUZ,KAAKI,yDAIvCK,OAAOI,oBAAoB,SAAUb,KAAKI,2CAe1C,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BC,KAAK,aAAaC,aAAW,kBACtEC,MAAO,CAACC,UAAW,wBACnBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,gCAAAK,OAAkCtB,KAAKM,MAAMC,SAAW,yBAA2B,IAAMgB,KAAK,KAA1G,gBAKJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACXH,EAAAC,EAAAC,cAAA,SACIC,UAAS,SAAAK,OAAWtB,KAAKM,MAAMC,SAAW,WAAa,IACvDiB,KAAK,SACTV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BA7CxBQ,IAAMC,6DDRfhC,2DE+DGiC,cAlDX,SAAAA,EAAY/B,GAAoB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IAC5B9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KAHVgC,WAEgC,EAG5B/B,EAAK+B,MAAQhC,EAAMgC,MAHS/B,8EAMhB+B,GACZ,OAAQA,EAAMC,QACV,KAAKnC,EAAOoC,KACR,MAAO,UACX,KAAKpC,EAAOqC,GACR,MAAO,QACX,KAAKrC,EAAOsC,MACR,MAAO,4CAOf,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BG,MAAO,CAACa,aAAc,SAC3DjC,KAAK4B,MAAMM,OACbpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,OAAKmB,IAAKnC,KAAK4B,MAAMM,MAAOE,IAAI,kBAIxCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,IACGjB,KAAK4B,MAAMS,QADd,KAGAvB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BACbH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAE,WAAAjB,OAAatB,KAAK4B,MAAMY,SAAWxC,KAAK4B,MAAMY,QACrDxC,KAAK4B,MAAMY,OAAS,KAAO,KAC5B1B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAE,cAAAjB,OAAgBtB,KAAK4B,MAAMa,YAAczC,KAAK4B,MAAMa,YAPpE,OAUI3B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACZH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAE,WAAAjB,OAAatB,KAAK4B,MAAMC,SAC5Bf,EAAAC,EAAAC,cAAA,KAAGC,UAAW,OAASjB,KAAK0C,eAAe1C,KAAK4B,oBA5CxDH,IAAMC,WC8HXiB,cAhGX,SAAAA,EAAY/C,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACpB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KAjBVgD,cAgBwB,EAAA/C,EAfxBgD,SAAW,EAeahD,EAdxBiD,WAcwB,8bAAAjD,EA0BxBO,SAAW,WACHK,OAAOsC,YAAcC,SAASC,gBAAgBC,WAAaF,SAASC,gBAAgBE,cACpFtD,EAAKuD,cA1BTvD,EAAKS,MAAQ,CACT+C,SAAS,EACTC,QAAQ,EACRC,OAAQ,GACRC,OAAQ5D,EAAM6D,MAAMD,QAGxBE,QAAQC,IAAK/D,GAEbC,EAAK+C,SAAWgB,IAAMC,OAAO,CACzBC,QAAS,kCAZOjE,mFAkBpBY,OAAOG,iBAAiB,SAAUZ,KAAKI,UACvCJ,KAAKoD,4DAIL3C,OAAOI,oBAAoB,SAAUb,KAAKI,+CASjC,IAAA2D,EAAA/D,KACHqD,EAAUrD,KAAKM,MAAM+C,QACvBC,EAAStD,KAAKM,MAAMgD,OAExB,IAAKD,IAAWC,EAAhB,CAIAtD,KAAKW,SAAS,CAAC0C,SAAS,IACxB,IAAMW,EAAO,CACTC,MAAOjE,KAAK8C,WACZoB,UAAW,CACPC,MAAOnE,KAAK6C,SACZuB,OAAQpE,KAAKM,MAAMiD,OAAOc,OAC1B7B,OAAQxC,KAAKM,MAAMkD,OAAOhB,OAC1BX,OAAQ7B,KAAKM,MAAMkD,OAAO3B,OAC1BY,UAAWzC,KAAKM,MAAMkD,OAAOf,YAGrCzC,KAAK4C,SAAS0B,KAAK,GAAIN,GACtBO,KAAM,SAACC,GACJ,IACIC,EADgBD,EAAOE,KACYA,KAAKC,gBAE5CZ,EAAKpD,SAAS,CACV0C,SAAS,EACTE,OAAM,GAAAjC,OAAAxB,OAAA8E,EAAA,EAAA9E,CACCiE,EAAKzD,MAAMiD,QADZzD,OAAA8E,EAAA,EAAA9E,CAEC2E,EAAUlB,SAEjBD,OAASS,EAAKzD,MAAMiD,OAAOc,OAASI,EAAUlB,OAAOc,QAAWI,EAAUI,SAG/E,WACCd,EAAKpD,SAAS,CAAC0C,SAAS,wCAK5B,OACIvC,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACM9E,KAAKM,MAAMiD,OAAOwB,IAAK,SAAAnD,GAAK,OAAId,EAAAC,EAAAC,cAACgE,EAAD,CAAOC,IAAKrD,EAAMS,QAAST,MAAOA,MAEpE5B,KAAKM,MAAM+C,SACXvC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBG,MAAO,CAAC8D,OAAQ,SAAUC,QAAS,UAC/DrE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAIjBjB,KAAKM,MAAMgD,QACXxC,EAAAC,EAAAC,cAAA,WAASC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,8DAvGIQ,IAAMC,WCM9B0D,IAASC,OACLvE,EAAAC,EAAAC,cAvBQ,WACR,OACIF,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACIhE,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAAA,WAASC,UAAU,YAAYG,MAAO,CAACmE,UAAW,UAC9CzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACI1E,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACIhE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjD,IACjC7B,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,kBAAkBE,UAAWjD,IACzC7B,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,wBAAwBE,UAAWjD,IAC/C7B,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,kBAAkBE,UAAWjD,WAWrE,MACAK,SAAS6C,cAAc","file":"static/js/main.d03bfb0e.chunk.js","sourcesContent":["export enum Source {\r\n    BOOK = 'BOOK',\r\n    TV = 'TV',\r\n    MOVIE = 'MOVIE'\r\n}","import React from 'react';\r\n\r\nimport './NavBar.css';\r\n\r\nexport interface NavBarState {\r\n    smallNav: boolean\r\n}\r\n\r\nclass NavBar extends React.Component<any, NavBarState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            smallNav: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n        const prevVal = this.state.smallNav,\r\n            newVal = window.scrollY >= 100;\r\n\r\n        if ( prevVal !== newVal ) {\r\n            this.setState({\r\n                smallNav: newVal\r\n            });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar is-dark is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\"\r\n                style={{boxShadow: '1px 1px 6px #ababab'}}>\r\n                <div className=\"navbar-brand\">\r\n                    <a className={`navbar-item alq-navbar__logo ${this.state.smallNav ? \"alq-navbar__logo_small\" : \"\"}`} href=\"/\">\r\n                        A-La Quote!\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"navbar-end\">\r\n                    <div className=\"navbar-item\">\r\n                        <div className=\"control has-icons-left has-icons-right\">\r\n                            <input \r\n                                className={`input ${this.state.smallNav ? \"is-small\" : \"\"}`} \r\n                                type=\"text\"/>\r\n                            <span className=\"icon is-small is-left\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Quote.css';\r\nimport { Quote as QuoteModel }  from '../../models/quote.model';\r\nimport { Source } from '../../models/source.enum';\r\n\r\nexport interface QuotesProps {\r\n    quote: QuoteModel\r\n}\r\n\r\nclass Quote extends React.Component<QuotesProps, any> {\r\n    quote: QuoteModel;\r\n\r\n    constructor(props: QuotesProps) {\r\n        super(props);\r\n\r\n        this.quote = props.quote;\r\n    }\r\n\r\n    getSourceClass( quote: QuoteModel ) {\r\n        switch( quote.source ) {\r\n            case Source.BOOK:\r\n                return 'fa-book';\r\n            case Source.TV:\r\n                return 'fa-tv';\r\n            case Source.MOVIE:\r\n                return 'fa-film';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card alq-quote__container\" style={{marginBottom: '40px'}} >\r\n                { this.quote.image &&\r\n                <div className=\"card-image\">\r\n                    <figure className=\"image is-2by1\">\r\n                        <img src={this.quote.image} alt=\"quote image\" />\r\n                    </figure>\r\n                </div>\r\n                }\r\n                <div className=\"card-content\">\r\n                    <p className=\"title alq-quote__content\">\r\n                    \"{ this.quote.content}\"\r\n                    </p>\r\n                    <small className=\"subtitle alq-quote__author\">\r\n                        <Link to={`/author/${this.quote.author}`}>{this.quote.author}</Link>\r\n                        {this.quote.author ? ', ' : null }\r\n                        <Link to={`/appearsIn/${this.quote.appearsIn}`}>{this.quote.appearsIn}</Link>\r\n                    </small>\r\n                    &nbsp;\r\n                    <span className=\"icon is-small\">\r\n                        <Link to={`/source/${this.quote.source}`}>\r\n                            <i className={'fas ' + this.getSourceClass(this.quote) }></i>\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\nimport { match } from 'react-router';\r\nimport axios, { AxiosInstance, AxiosResponse } from 'axios';\r\n\r\nimport Quote from '../Quote/Quote';\r\nimport { Quote as QuoteModel } from '../../models/quote.model';\r\n\r\nexport interface QuotesProps {\r\n    match?: match\r\n}\r\n  \r\nexport interface QuoteListState {\r\n    loading: boolean,\r\n    noMore: boolean,\r\n    quotes: QuoteModel[],\r\n    params: { [key: string]: any }\r\n}\r\n\r\nexport interface GQLResult {\r\n    quotes: QuoteModel[],\r\n    total: number\r\n}\r\n\r\nclass QuoteList extends React.Component<QuotesProps, QuoteListState> {\r\n    axiosGQL: AxiosInstance;\r\n    pageSize = 3;\r\n    quoteQuery = `\r\n        query PaginatedQuotes($first: Int, $offset: Int, $author: String, $appearsIn: String, $source: Source) {\r\n            paginatedQuotes(first: $first, offset: $offset, author: $author, appearsIn: $appearsIn, source: $source) {\r\n            total\r\n            quotes {\r\n                appearsIn\r\n                author\r\n                content\r\n                image\r\n                source\r\n                }\r\n            }\r\n        }`;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            noMore: false,\r\n            quotes: [],\r\n            params: props.match.params\r\n        };\r\n\r\n        console.log( props);\r\n\r\n        this.axiosGQL = axios.create({\r\n            baseURL: 'http://localhost:8080/graphql'\r\n            // baseURL: 'https://alq-alq-graphql.7e14.starter-us-west-2.openshiftapps.com/graphql'\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.onScroll);\r\n        this.loadQuotes();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (window.innerHeight + document.documentElement.scrollTop >= document.documentElement.offsetHeight ) {\r\n            this.loadQuotes();\r\n        }\r\n    }\r\n    \r\n    loadQuotes() {\r\n        const loading = this.state.loading,\r\n            noMore = this.state.noMore;\r\n\r\n        if ( loading || noMore ) {\r\n            return;\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        const body = {\r\n            query: this.quoteQuery,\r\n            variables: {\r\n                first: this.pageSize,\r\n                offset: this.state.quotes.length,\r\n                author: this.state.params.author,\r\n                source: this.state.params.source,\r\n                appearsIn: this.state.params.appearsIn\r\n            }\r\n        }\r\n        this.axiosGQL.post('', body)\r\n        .then( (result: AxiosResponse) => {\r\n            const axiosresult = result.data,\r\n                gqlResult: GQLResult = axiosresult.data.paginatedQuotes;\r\n\r\n            this.setState({\r\n                loading: false,\r\n                quotes: [\r\n                    ...this.state.quotes,\r\n                    ...gqlResult.quotes\r\n                ],\r\n                noMore: (this.state.quotes.length + gqlResult.quotes.length) >= gqlResult.total\r\n            });\r\n\r\n        }, () => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                { this.state.quotes.map( quote => <Quote key={quote.content} quote={quote} /> ) }\r\n                {\r\n                this.state.loading &&\r\n                <span className=\"icon is-large\" style={{margin: '0 auto', display: 'block'}}>\r\n                    <i className=\"fas fa-spinner fa-spin fa-3x\"></i>\r\n                </span>\r\n                }\r\n                {\r\n                this.state.noMore &&\r\n                <article className=\"message is-info\">\r\n                    <div className=\"message-header\">\r\n                        <p>This is the end</p>\r\n                    </div>\r\n                    <div className=\"message-body\">\r\n                        Oh jeez! You've reached the end for today, Morty!\r\n                    </div>\r\n                </article>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route} from 'react-router-dom';\r\n\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport QuoteList from './components/QuoteList/QuoteList';\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar />\r\n            <section className=\"container\" style={{marginTop: '100px'}}>\r\n                <div className=\"columns\">\r\n                    <div className=\"column is-three-fifths is-offset-one-fifth\">\r\n                        <BrowserRouter>\r\n                            <React.Fragment>\r\n                                <Route path=\"/\" exact component={QuoteList} />\r\n                                <Route path=\"/author/:author\" component={QuoteList} />\r\n                                <Route path=\"/appearsIn/:appearsIn\" component={QuoteList} />\r\n                                <Route path=\"/source/:source\" component={QuoteList} />\r\n                            </React.Fragment>\r\n                        </BrowserRouter>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}