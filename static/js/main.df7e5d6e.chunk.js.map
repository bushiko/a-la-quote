{"version":3,"sources":["models/source.enum.ts","NavBar/NavBar.tsx","components/Quote/Quote.tsx","components/QuoteList/QuoteList.tsx","index.tsx"],"names":["Source","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onScroll","prevVal","state","smallNav","newVal","window","scrollY","setState","addEventListener","removeEventListener","react_default","a","createElement","className","role","aria-label","style","boxShadow","concat","href","type","React","Component","getSourceClass","quote","source","BOOK","TV","MOVIE","Quote","marginBottom","image","src","alt","content","author","appearsIn","QuoteList","axiosGQL","pageSize","innerHeight","document","documentElement","scrollTop","offsetHeight","loadQuotes","loading","noMore","quotes","axios","create","baseURL","_this2","post","query","getQuoteQuery","then","result","gqlResult","data","paginatedQuotes","toConsumableArray","length","total","Fragment","map","components_Quote_Quote","key","margin","display","ReactDOM","render","src_NavBar_NavBar","marginTop","components_QuoteList_QuoteList","querySelector"],"mappings":"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","file":"static/js/main.df7e5d6e.chunk.js","sourcesContent":["export enum Source {\r\n    BOOK = 'BOOK',\r\n    TV = 'TV',\r\n    MOVIE = 'MOVIE'\r\n}","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nexport interface NavBarState {\r\n    smallNav: boolean\r\n}\r\n\r\nclass NavBar extends React.Component<any, NavBarState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            smallNav: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n        const prevVal = this.state.smallNav,\r\n            newVal = window.scrollY >= 100;\r\n\r\n        if ( prevVal !== newVal ) {\r\n            this.setState({\r\n                smallNav: newVal\r\n            });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar is-dark is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\"\r\n                style={{boxShadow: '1px 1px 6px #ababab'}}>\r\n                <div className=\"navbar-brand\">\r\n                    <a className={`navbar-item alq-navbar__logo ${this.state.smallNav ? \"alq-navbar__logo_small\" : \"\"}`} href=\"#\">\r\n                        A-La Quote!\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"navbar-end\">\r\n                    <div className=\"navbar-item\">\r\n                        <div className=\"control has-icons-left has-icons-right\">\r\n                            <input \r\n                                className={`input ${this.state.smallNav ? \"is-small\" : \"\"}`} \r\n                                type=\"text\"/>\r\n                            <span className=\"icon is-small is-left\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './Quote.css';\r\nimport { Quote as QuoteModel }  from '../../models/quote.model';\r\nimport { Source } from '../../models/source.enum';\r\n\r\nexport interface QuotesProps {\r\n    quote: QuoteModel\r\n}\r\n\r\nfunction getSourceClass( quote: QuoteModel ) {\r\n    switch( quote.source ) {\r\n        case Source.BOOK:\r\n            return 'fa-book';\r\n        case Source.TV:\r\n            return 'fa-tv';\r\n        case Source.MOVIE:\r\n            return 'fa-film';\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst Quote = (props: QuotesProps) => {\r\n    const quote = props.quote;\r\n\r\n    if ( !quote ) return <div>Bad prop received</div> ;\r\n\r\n    return (\r\n        <div className=\"card alq-quote__container\" style={{marginBottom: '16px'}} >\r\n            { quote.image &&\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-2by1\">\r\n                    <img src={quote.image} alt=\"quote image\" />\r\n                </figure>\r\n            </div>\r\n            }\r\n            <div className=\"card-content\">\r\n                <p className=\"title alq-quote__content\">\r\n                \"{ quote.content}\"\r\n                </p>\r\n                <small className=\"subtitle alq-quote__author\">\r\n                { quote.author }{quote.author ? ', ' : null }{ quote.appearsIn }\r\n                </small>\r\n                &nbsp;\r\n                <span className=\"icon is-small\">\r\n                    <i className={'fas ' + getSourceClass(quote) }></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\nimport axios, { AxiosInstance, AxiosResponse } from 'axios';\r\n\r\nimport Quote from '../Quote/Quote';\r\nimport { Quote as QuoteModel } from '../../models/quote.model';\r\n\r\nexport interface QuoteListState {\r\n    loading: boolean,\r\n    noMore: boolean,\r\n    quotes: QuoteModel[]\r\n}\r\n\r\nexport interface GQLResult {\r\n    quotes: QuoteModel[],\r\n    total: number\r\n}\r\n\r\nclass QuoteList extends React.Component<any, QuoteListState> {\r\n    axiosGQL: AxiosInstance;\r\n    pageSize = 3;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            noMore: false,\r\n            quotes: []\r\n        };\r\n\r\n        this.axiosGQL = axios.create({\r\n            baseURL: 'http://alq-alq-graphql.7e14.starter-us-west-2.openshiftapps.com/graphql'\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.onScroll);\r\n        this.loadQuotes();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (window.innerHeight + document.documentElement.scrollTop >= document.documentElement.offsetHeight ) {\r\n            this.loadQuotes();\r\n        }\r\n    }\r\n\r\n    \r\n    loadQuotes() {\r\n        const loading = this.state.loading,\r\n            noMore = this.state.noMore;\r\n\r\n        if ( loading || noMore ) {\r\n            return;\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        this.axiosGQL.post('', { query: this.getQuoteQuery() })\r\n        .then( (result: AxiosResponse) => {\r\n            const axiosresult = result.data,\r\n                gqlResult: GQLResult = axiosresult.data.paginatedQuotes;\r\n\r\n            this.setState({\r\n                loading: false,\r\n                quotes: [\r\n                    ...this.state.quotes,\r\n                    ...gqlResult.quotes\r\n                ],\r\n                noMore: this.state.quotes.length >= gqlResult.total\r\n            });\r\n\r\n        }, () => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    getQuoteQuery() {\r\n        return `\r\n        {\r\n            paginatedQuotes(first: ${this.pageSize}, \r\n                offset: ${this.state.quotes.length}\r\n            ) {\r\n            total\r\n            quotes {\r\n                appearsIn\r\n                author\r\n                content\r\n                image\r\n                source\r\n                }\r\n            }\r\n        }`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                { this.state.quotes.map( quote => <Quote key={quote.content} quote={quote} /> ) }\r\n                {\r\n                this.state.loading &&\r\n                <span className=\"icon is-large\" style={{margin: '0 auto', display: 'block'}}>\r\n                    <i className=\"fas fa-spinner fa-spin fa-3x\"></i>\r\n                </span>\r\n                }\r\n                {\r\n                this.state.noMore &&\r\n                <article className=\"message is-info\">\r\n                    <div className=\"message-header\">\r\n                        <p>This is the end</p>\r\n                    </div>\r\n                    <div className=\"message-body\">\r\n                        Oh jeez! You've reached the end for today, Morty!\r\n                    </div>\r\n                </article>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport NavBar from './NavBar/NavBar';\r\nimport QuoteList from './components/QuoteList/QuoteList';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <section className=\"container\" style={{marginTop: '100px'}}>\r\n                <div className=\"columns\">\r\n                    <div className=\"column is-three-fifths is-offset-one-fifth\">\r\n                        <QuoteList />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}